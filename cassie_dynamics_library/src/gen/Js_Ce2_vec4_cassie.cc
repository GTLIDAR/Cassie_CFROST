/*
 * Automatically Generated from Mathematica.
 * Wed 20 Jun 2018 12:32:09 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "frost/gen/Js_Ce2_vec4_cassie.hh"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double _NotUsed;
  NULL;
  p_output1[0]=1;
  p_output1[1]=1;
  p_output1[2]=1;
  p_output1[3]=1;
  p_output1[4]=1;
  p_output1[5]=1;
  p_output1[6]=1;
  p_output1[7]=1;
  p_output1[8]=1;
  p_output1[9]=1;
  p_output1[10]=1;
  p_output1[11]=1;
  p_output1[12]=1;
  p_output1[13]=1;
  p_output1[14]=1;
  p_output1[15]=1;
  p_output1[16]=1;
  p_output1[17]=1;
  p_output1[18]=1;
  p_output1[19]=1;
  p_output1[20]=1;
  p_output1[21]=1;
  p_output1[22]=1;
  p_output1[23]=1;
  p_output1[24]=1;
  p_output1[25]=1;
  p_output1[26]=1;
  p_output1[27]=1;
  p_output1[28]=1;
  p_output1[29]=1;
  p_output1[30]=1;
  p_output1[31]=1;
  p_output1[32]=1;
  p_output1[33]=1;
  p_output1[34]=1;
  p_output1[35]=1;
  p_output1[36]=1;
  p_output1[37]=2;
  p_output1[38]=2;
  p_output1[39]=2;
  p_output1[40]=2;
  p_output1[41]=2;
  p_output1[42]=2;
  p_output1[43]=2;
  p_output1[44]=2;
  p_output1[45]=2;
  p_output1[46]=2;
  p_output1[47]=2;
  p_output1[48]=2;
  p_output1[49]=2;
  p_output1[50]=2;
  p_output1[51]=2;
  p_output1[52]=2;
  p_output1[53]=2;
  p_output1[54]=2;
  p_output1[55]=2;
  p_output1[56]=2;
  p_output1[57]=2;
  p_output1[58]=2;
  p_output1[59]=2;
  p_output1[60]=2;
  p_output1[61]=2;
  p_output1[62]=2;
  p_output1[63]=2;
  p_output1[64]=2;
  p_output1[65]=2;
  p_output1[66]=2;
  p_output1[67]=2;
  p_output1[68]=2;
  p_output1[69]=2;
  p_output1[70]=2;
  p_output1[71]=2;
  p_output1[72]=2;
  p_output1[73]=2;
  p_output1[74]=3;
  p_output1[75]=3;
  p_output1[76]=3;
  p_output1[77]=3;
  p_output1[78]=3;
  p_output1[79]=3;
  p_output1[80]=3;
  p_output1[81]=3;
  p_output1[82]=3;
  p_output1[83]=3;
  p_output1[84]=3;
  p_output1[85]=3;
  p_output1[86]=3;
  p_output1[87]=3;
  p_output1[88]=3;
  p_output1[89]=3;
  p_output1[90]=3;
  p_output1[91]=3;
  p_output1[92]=3;
  p_output1[93]=3;
  p_output1[94]=4;
  p_output1[95]=4;
  p_output1[96]=4;
  p_output1[97]=4;
  p_output1[98]=4;
  p_output1[99]=4;
  p_output1[100]=4;
  p_output1[101]=4;
  p_output1[102]=4;
  p_output1[103]=4;
  p_output1[104]=4;
  p_output1[105]=4;
  p_output1[106]=4;
  p_output1[107]=4;
  p_output1[108]=4;
  p_output1[109]=4;
  p_output1[110]=4;
  p_output1[111]=4;
  p_output1[112]=4;
  p_output1[113]=4;
  p_output1[114]=5;
  p_output1[115]=5;
  p_output1[116]=5;
  p_output1[117]=5;
  p_output1[118]=5;
  p_output1[119]=5;
  p_output1[120]=5;
  p_output1[121]=5;
  p_output1[122]=5;
  p_output1[123]=5;
  p_output1[124]=5;
  p_output1[125]=5;
  p_output1[126]=5;
  p_output1[127]=5;
  p_output1[128]=5;
  p_output1[129]=5;
  p_output1[130]=5;
  p_output1[131]=5;
  p_output1[132]=5;
  p_output1[133]=5;
  p_output1[134]=6;
  p_output1[135]=6;
  p_output1[136]=6;
  p_output1[137]=6;
  p_output1[138]=6;
  p_output1[139]=6;
  p_output1[140]=6;
  p_output1[141]=6;
  p_output1[142]=6;
  p_output1[143]=6;
  p_output1[144]=6;
  p_output1[145]=6;
  p_output1[146]=6;
  p_output1[147]=6;
  p_output1[148]=6;
  p_output1[149]=6;
  p_output1[150]=6;
  p_output1[151]=6;
  p_output1[152]=6;
  p_output1[153]=6;
  p_output1[154]=7;
  p_output1[155]=7;
  p_output1[156]=7;
  p_output1[157]=7;
  p_output1[158]=7;
  p_output1[159]=7;
  p_output1[160]=7;
  p_output1[161]=7;
  p_output1[162]=7;
  p_output1[163]=7;
  p_output1[164]=7;
  p_output1[165]=7;
  p_output1[166]=7;
  p_output1[167]=8;
  p_output1[168]=8;
  p_output1[169]=8;
  p_output1[170]=8;
  p_output1[171]=8;
  p_output1[172]=8;
  p_output1[173]=8;
  p_output1[174]=8;
  p_output1[175]=8;
  p_output1[176]=8;
  p_output1[177]=8;
  p_output1[178]=8;
  p_output1[179]=8;
  p_output1[180]=9;
  p_output1[181]=9;
  p_output1[182]=9;
  p_output1[183]=9;
  p_output1[184]=9;
  p_output1[185]=9;
  p_output1[186]=9;
  p_output1[187]=9;
  p_output1[188]=9;
  p_output1[189]=9;
  p_output1[190]=9;
  p_output1[191]=9;
  p_output1[192]=9;
  p_output1[193]=10;
  p_output1[194]=10;
  p_output1[195]=10;
  p_output1[196]=10;
  p_output1[197]=10;
  p_output1[198]=10;
  p_output1[199]=10;
  p_output1[200]=10;
  p_output1[201]=10;
  p_output1[202]=10;
  p_output1[203]=10;
  p_output1[204]=10;
  p_output1[205]=10;
  p_output1[206]=11;
  p_output1[207]=11;
  p_output1[208]=11;
  p_output1[209]=11;
  p_output1[210]=11;
  p_output1[211]=11;
  p_output1[212]=11;
  p_output1[213]=11;
  p_output1[214]=11;
  p_output1[215]=11;
  p_output1[216]=11;
  p_output1[217]=11;
  p_output1[218]=11;
  p_output1[219]=12;
  p_output1[220]=12;
  p_output1[221]=12;
  p_output1[222]=12;
  p_output1[223]=12;
  p_output1[224]=12;
  p_output1[225]=12;
  p_output1[226]=12;
  p_output1[227]=12;
  p_output1[228]=12;
  p_output1[229]=12;
  p_output1[230]=12;
  p_output1[231]=12;
  p_output1[232]=13;
  p_output1[233]=13;
  p_output1[234]=13;
  p_output1[235]=13;
  p_output1[236]=13;
  p_output1[237]=13;
  p_output1[238]=13;
  p_output1[239]=13;
  p_output1[240]=13;
  p_output1[241]=13;
  p_output1[242]=13;
  p_output1[243]=13;
  p_output1[244]=13;
  p_output1[245]=14;
  p_output1[246]=14;
  p_output1[247]=14;
  p_output1[248]=14;
  p_output1[249]=14;
  p_output1[250]=14;
  p_output1[251]=14;
  p_output1[252]=14;
  p_output1[253]=14;
  p_output1[254]=14;
  p_output1[255]=14;
  p_output1[256]=14;
  p_output1[257]=14;
  p_output1[258]=15;
  p_output1[259]=15;
  p_output1[260]=15;
  p_output1[261]=15;
  p_output1[262]=15;
  p_output1[263]=15;
  p_output1[264]=15;
  p_output1[265]=15;
  p_output1[266]=15;
  p_output1[267]=15;
  p_output1[268]=15;
  p_output1[269]=15;
  p_output1[270]=15;
  p_output1[271]=16;
  p_output1[272]=16;
  p_output1[273]=16;
  p_output1[274]=16;
  p_output1[275]=16;
  p_output1[276]=16;
  p_output1[277]=16;
  p_output1[278]=16;
  p_output1[279]=16;
  p_output1[280]=16;
  p_output1[281]=16;
  p_output1[282]=16;
  p_output1[283]=16;
  p_output1[284]=17;
  p_output1[285]=17;
  p_output1[286]=17;
  p_output1[287]=17;
  p_output1[288]=17;
  p_output1[289]=17;
  p_output1[290]=17;
  p_output1[291]=17;
  p_output1[292]=17;
  p_output1[293]=17;
  p_output1[294]=17;
  p_output1[295]=17;
  p_output1[296]=17;
  p_output1[297]=18;
  p_output1[298]=18;
  p_output1[299]=18;
  p_output1[300]=18;
  p_output1[301]=18;
  p_output1[302]=18;
  p_output1[303]=18;
  p_output1[304]=18;
  p_output1[305]=18;
  p_output1[306]=18;
  p_output1[307]=18;
  p_output1[308]=18;
  p_output1[309]=18;
  p_output1[310]=19;
  p_output1[311]=19;
  p_output1[312]=19;
  p_output1[313]=19;
  p_output1[314]=19;
  p_output1[315]=19;
  p_output1[316]=19;
  p_output1[317]=19;
  p_output1[318]=19;
  p_output1[319]=19;
  p_output1[320]=19;
  p_output1[321]=19;
  p_output1[322]=19;
  p_output1[323]=20;
  p_output1[324]=20;
  p_output1[325]=20;
  p_output1[326]=20;
  p_output1[327]=20;
  p_output1[328]=20;
  p_output1[329]=20;
  p_output1[330]=20;
  p_output1[331]=20;
  p_output1[332]=20;
  p_output1[333]=20;
  p_output1[334]=20;
  p_output1[335]=20;
  p_output1[336]=4;
  p_output1[337]=5;
  p_output1[338]=6;
  p_output1[339]=7;
  p_output1[340]=8;
  p_output1[341]=9;
  p_output1[342]=10;
  p_output1[343]=11;
  p_output1[344]=12;
  p_output1[345]=13;
  p_output1[346]=14;
  p_output1[347]=15;
  p_output1[348]=16;
  p_output1[349]=17;
  p_output1[350]=18;
  p_output1[351]=19;
  p_output1[352]=20;
  p_output1[353]=21;
  p_output1[354]=22;
  p_output1[355]=23;
  p_output1[356]=24;
  p_output1[357]=25;
  p_output1[358]=26;
  p_output1[359]=27;
  p_output1[360]=28;
  p_output1[361]=29;
  p_output1[362]=30;
  p_output1[363]=31;
  p_output1[364]=32;
  p_output1[365]=33;
  p_output1[366]=34;
  p_output1[367]=35;
  p_output1[368]=36;
  p_output1[369]=37;
  p_output1[370]=38;
  p_output1[371]=39;
  p_output1[372]=40;
  p_output1[373]=4;
  p_output1[374]=5;
  p_output1[375]=6;
  p_output1[376]=7;
  p_output1[377]=8;
  p_output1[378]=9;
  p_output1[379]=10;
  p_output1[380]=11;
  p_output1[381]=12;
  p_output1[382]=13;
  p_output1[383]=14;
  p_output1[384]=15;
  p_output1[385]=16;
  p_output1[386]=17;
  p_output1[387]=18;
  p_output1[388]=19;
  p_output1[389]=20;
  p_output1[390]=21;
  p_output1[391]=22;
  p_output1[392]=23;
  p_output1[393]=24;
  p_output1[394]=25;
  p_output1[395]=26;
  p_output1[396]=27;
  p_output1[397]=28;
  p_output1[398]=29;
  p_output1[399]=30;
  p_output1[400]=31;
  p_output1[401]=32;
  p_output1[402]=33;
  p_output1[403]=34;
  p_output1[404]=35;
  p_output1[405]=36;
  p_output1[406]=37;
  p_output1[407]=38;
  p_output1[408]=39;
  p_output1[409]=40;
  p_output1[410]=4;
  p_output1[411]=5;
  p_output1[412]=6;
  p_output1[413]=7;
  p_output1[414]=8;
  p_output1[415]=9;
  p_output1[416]=10;
  p_output1[417]=11;
  p_output1[418]=12;
  p_output1[419]=13;
  p_output1[420]=14;
  p_output1[421]=15;
  p_output1[422]=16;
  p_output1[423]=17;
  p_output1[424]=18;
  p_output1[425]=19;
  p_output1[426]=20;
  p_output1[427]=21;
  p_output1[428]=22;
  p_output1[429]=24;
  p_output1[430]=4;
  p_output1[431]=5;
  p_output1[432]=6;
  p_output1[433]=7;
  p_output1[434]=8;
  p_output1[435]=9;
  p_output1[436]=10;
  p_output1[437]=11;
  p_output1[438]=12;
  p_output1[439]=13;
  p_output1[440]=14;
  p_output1[441]=15;
  p_output1[442]=16;
  p_output1[443]=17;
  p_output1[444]=18;
  p_output1[445]=19;
  p_output1[446]=20;
  p_output1[447]=21;
  p_output1[448]=22;
  p_output1[449]=24;
  p_output1[450]=4;
  p_output1[451]=5;
  p_output1[452]=6;
  p_output1[453]=7;
  p_output1[454]=8;
  p_output1[455]=9;
  p_output1[456]=10;
  p_output1[457]=11;
  p_output1[458]=12;
  p_output1[459]=13;
  p_output1[460]=14;
  p_output1[461]=15;
  p_output1[462]=16;
  p_output1[463]=17;
  p_output1[464]=18;
  p_output1[465]=19;
  p_output1[466]=20;
  p_output1[467]=21;
  p_output1[468]=22;
  p_output1[469]=24;
  p_output1[470]=4;
  p_output1[471]=5;
  p_output1[472]=6;
  p_output1[473]=7;
  p_output1[474]=8;
  p_output1[475]=9;
  p_output1[476]=10;
  p_output1[477]=11;
  p_output1[478]=12;
  p_output1[479]=13;
  p_output1[480]=14;
  p_output1[481]=15;
  p_output1[482]=16;
  p_output1[483]=17;
  p_output1[484]=18;
  p_output1[485]=19;
  p_output1[486]=20;
  p_output1[487]=21;
  p_output1[488]=22;
  p_output1[489]=24;
  p_output1[490]=4;
  p_output1[491]=5;
  p_output1[492]=6;
  p_output1[493]=7;
  p_output1[494]=8;
  p_output1[495]=9;
  p_output1[496]=10;
  p_output1[497]=11;
  p_output1[498]=12;
  p_output1[499]=13;
  p_output1[500]=21;
  p_output1[501]=22;
  p_output1[502]=24;
  p_output1[503]=4;
  p_output1[504]=5;
  p_output1[505]=6;
  p_output1[506]=7;
  p_output1[507]=8;
  p_output1[508]=9;
  p_output1[509]=10;
  p_output1[510]=11;
  p_output1[511]=12;
  p_output1[512]=13;
  p_output1[513]=21;
  p_output1[514]=22;
  p_output1[515]=24;
  p_output1[516]=4;
  p_output1[517]=5;
  p_output1[518]=6;
  p_output1[519]=7;
  p_output1[520]=8;
  p_output1[521]=9;
  p_output1[522]=10;
  p_output1[523]=11;
  p_output1[524]=12;
  p_output1[525]=13;
  p_output1[526]=21;
  p_output1[527]=22;
  p_output1[528]=24;
  p_output1[529]=4;
  p_output1[530]=5;
  p_output1[531]=6;
  p_output1[532]=7;
  p_output1[533]=8;
  p_output1[534]=9;
  p_output1[535]=10;
  p_output1[536]=11;
  p_output1[537]=12;
  p_output1[538]=13;
  p_output1[539]=21;
  p_output1[540]=22;
  p_output1[541]=24;
  p_output1[542]=4;
  p_output1[543]=5;
  p_output1[544]=6;
  p_output1[545]=7;
  p_output1[546]=8;
  p_output1[547]=9;
  p_output1[548]=10;
  p_output1[549]=11;
  p_output1[550]=12;
  p_output1[551]=13;
  p_output1[552]=21;
  p_output1[553]=22;
  p_output1[554]=24;
  p_output1[555]=4;
  p_output1[556]=5;
  p_output1[557]=6;
  p_output1[558]=7;
  p_output1[559]=8;
  p_output1[560]=9;
  p_output1[561]=10;
  p_output1[562]=11;
  p_output1[563]=12;
  p_output1[564]=13;
  p_output1[565]=21;
  p_output1[566]=22;
  p_output1[567]=24;
  p_output1[568]=4;
  p_output1[569]=5;
  p_output1[570]=6;
  p_output1[571]=7;
  p_output1[572]=8;
  p_output1[573]=9;
  p_output1[574]=10;
  p_output1[575]=11;
  p_output1[576]=12;
  p_output1[577]=13;
  p_output1[578]=21;
  p_output1[579]=22;
  p_output1[580]=24;
  p_output1[581]=4;
  p_output1[582]=5;
  p_output1[583]=6;
  p_output1[584]=14;
  p_output1[585]=15;
  p_output1[586]=16;
  p_output1[587]=17;
  p_output1[588]=18;
  p_output1[589]=19;
  p_output1[590]=20;
  p_output1[591]=21;
  p_output1[592]=22;
  p_output1[593]=24;
  p_output1[594]=4;
  p_output1[595]=5;
  p_output1[596]=6;
  p_output1[597]=14;
  p_output1[598]=15;
  p_output1[599]=16;
  p_output1[600]=17;
  p_output1[601]=18;
  p_output1[602]=19;
  p_output1[603]=20;
  p_output1[604]=21;
  p_output1[605]=22;
  p_output1[606]=24;
  p_output1[607]=4;
  p_output1[608]=5;
  p_output1[609]=6;
  p_output1[610]=14;
  p_output1[611]=15;
  p_output1[612]=16;
  p_output1[613]=17;
  p_output1[614]=18;
  p_output1[615]=19;
  p_output1[616]=20;
  p_output1[617]=21;
  p_output1[618]=22;
  p_output1[619]=24;
  p_output1[620]=4;
  p_output1[621]=5;
  p_output1[622]=6;
  p_output1[623]=14;
  p_output1[624]=15;
  p_output1[625]=16;
  p_output1[626]=17;
  p_output1[627]=18;
  p_output1[628]=19;
  p_output1[629]=20;
  p_output1[630]=21;
  p_output1[631]=22;
  p_output1[632]=24;
  p_output1[633]=4;
  p_output1[634]=5;
  p_output1[635]=6;
  p_output1[636]=14;
  p_output1[637]=15;
  p_output1[638]=16;
  p_output1[639]=17;
  p_output1[640]=18;
  p_output1[641]=19;
  p_output1[642]=20;
  p_output1[643]=21;
  p_output1[644]=22;
  p_output1[645]=24;
  p_output1[646]=4;
  p_output1[647]=5;
  p_output1[648]=6;
  p_output1[649]=14;
  p_output1[650]=15;
  p_output1[651]=16;
  p_output1[652]=17;
  p_output1[653]=18;
  p_output1[654]=19;
  p_output1[655]=20;
  p_output1[656]=21;
  p_output1[657]=22;
  p_output1[658]=24;
  p_output1[659]=4;
  p_output1[660]=5;
  p_output1[661]=6;
  p_output1[662]=14;
  p_output1[663]=15;
  p_output1[664]=16;
  p_output1[665]=17;
  p_output1[666]=18;
  p_output1[667]=19;
  p_output1[668]=20;
  p_output1[669]=21;
  p_output1[670]=22;
  p_output1[671]=24;
}



void frost::gen::Js_Ce2_vec4_cassie(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
