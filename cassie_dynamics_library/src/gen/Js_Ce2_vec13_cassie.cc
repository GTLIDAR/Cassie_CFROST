/*
 * Automatically Generated from Mathematica.
 * Wed 20 Jun 2018 12:43:30 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "frost/gen/Js_Ce2_vec13_cassie.hh"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double _NotUsed;
  NULL;
  p_output1[0]=1;
  p_output1[1]=1;
  p_output1[2]=1;
  p_output1[3]=1;
  p_output1[4]=1;
  p_output1[5]=1;
  p_output1[6]=1;
  p_output1[7]=1;
  p_output1[8]=1;
  p_output1[9]=1;
  p_output1[10]=1;
  p_output1[11]=1;
  p_output1[12]=1;
  p_output1[13]=1;
  p_output1[14]=1;
  p_output1[15]=1;
  p_output1[16]=1;
  p_output1[17]=1;
  p_output1[18]=1;
  p_output1[19]=1;
  p_output1[20]=1;
  p_output1[21]=1;
  p_output1[22]=1;
  p_output1[23]=2;
  p_output1[24]=2;
  p_output1[25]=2;
  p_output1[26]=2;
  p_output1[27]=2;
  p_output1[28]=2;
  p_output1[29]=2;
  p_output1[30]=2;
  p_output1[31]=2;
  p_output1[32]=2;
  p_output1[33]=2;
  p_output1[34]=2;
  p_output1[35]=2;
  p_output1[36]=2;
  p_output1[37]=2;
  p_output1[38]=2;
  p_output1[39]=2;
  p_output1[40]=2;
  p_output1[41]=2;
  p_output1[42]=2;
  p_output1[43]=2;
  p_output1[44]=2;
  p_output1[45]=2;
  p_output1[46]=3;
  p_output1[47]=3;
  p_output1[48]=3;
  p_output1[49]=3;
  p_output1[50]=3;
  p_output1[51]=3;
  p_output1[52]=3;
  p_output1[53]=3;
  p_output1[54]=3;
  p_output1[55]=3;
  p_output1[56]=3;
  p_output1[57]=3;
  p_output1[58]=3;
  p_output1[59]=3;
  p_output1[60]=3;
  p_output1[61]=3;
  p_output1[62]=3;
  p_output1[63]=3;
  p_output1[64]=3;
  p_output1[65]=3;
  p_output1[66]=3;
  p_output1[67]=3;
  p_output1[68]=3;
  p_output1[69]=4;
  p_output1[70]=4;
  p_output1[71]=4;
  p_output1[72]=4;
  p_output1[73]=4;
  p_output1[74]=4;
  p_output1[75]=4;
  p_output1[76]=4;
  p_output1[77]=4;
  p_output1[78]=4;
  p_output1[79]=4;
  p_output1[80]=4;
  p_output1[81]=4;
  p_output1[82]=4;
  p_output1[83]=4;
  p_output1[84]=4;
  p_output1[85]=4;
  p_output1[86]=4;
  p_output1[87]=4;
  p_output1[88]=4;
  p_output1[89]=4;
  p_output1[90]=4;
  p_output1[91]=4;
  p_output1[92]=5;
  p_output1[93]=5;
  p_output1[94]=5;
  p_output1[95]=5;
  p_output1[96]=5;
  p_output1[97]=5;
  p_output1[98]=5;
  p_output1[99]=5;
  p_output1[100]=5;
  p_output1[101]=5;
  p_output1[102]=5;
  p_output1[103]=5;
  p_output1[104]=5;
  p_output1[105]=5;
  p_output1[106]=5;
  p_output1[107]=5;
  p_output1[108]=5;
  p_output1[109]=5;
  p_output1[110]=5;
  p_output1[111]=5;
  p_output1[112]=5;
  p_output1[113]=5;
  p_output1[114]=5;
  p_output1[115]=6;
  p_output1[116]=6;
  p_output1[117]=6;
  p_output1[118]=6;
  p_output1[119]=6;
  p_output1[120]=6;
  p_output1[121]=6;
  p_output1[122]=6;
  p_output1[123]=6;
  p_output1[124]=6;
  p_output1[125]=6;
  p_output1[126]=6;
  p_output1[127]=6;
  p_output1[128]=6;
  p_output1[129]=6;
  p_output1[130]=6;
  p_output1[131]=6;
  p_output1[132]=6;
  p_output1[133]=6;
  p_output1[134]=6;
  p_output1[135]=6;
  p_output1[136]=6;
  p_output1[137]=6;
  p_output1[138]=7;
  p_output1[139]=7;
  p_output1[140]=7;
  p_output1[141]=7;
  p_output1[142]=7;
  p_output1[143]=7;
  p_output1[144]=7;
  p_output1[145]=7;
  p_output1[146]=7;
  p_output1[147]=7;
  p_output1[148]=7;
  p_output1[149]=7;
  p_output1[150]=7;
  p_output1[151]=7;
  p_output1[152]=7;
  p_output1[153]=7;
  p_output1[154]=7;
  p_output1[155]=7;
  p_output1[156]=7;
  p_output1[157]=7;
  p_output1[158]=7;
  p_output1[159]=7;
  p_output1[160]=7;
  p_output1[161]=8;
  p_output1[162]=8;
  p_output1[163]=8;
  p_output1[164]=8;
  p_output1[165]=8;
  p_output1[166]=8;
  p_output1[167]=8;
  p_output1[168]=8;
  p_output1[169]=8;
  p_output1[170]=8;
  p_output1[171]=8;
  p_output1[172]=8;
  p_output1[173]=8;
  p_output1[174]=8;
  p_output1[175]=8;
  p_output1[176]=8;
  p_output1[177]=8;
  p_output1[178]=8;
  p_output1[179]=8;
  p_output1[180]=8;
  p_output1[181]=8;
  p_output1[182]=8;
  p_output1[183]=8;
  p_output1[184]=9;
  p_output1[185]=9;
  p_output1[186]=9;
  p_output1[187]=9;
  p_output1[188]=9;
  p_output1[189]=9;
  p_output1[190]=9;
  p_output1[191]=9;
  p_output1[192]=9;
  p_output1[193]=9;
  p_output1[194]=9;
  p_output1[195]=9;
  p_output1[196]=9;
  p_output1[197]=9;
  p_output1[198]=9;
  p_output1[199]=9;
  p_output1[200]=9;
  p_output1[201]=9;
  p_output1[202]=9;
  p_output1[203]=9;
  p_output1[204]=9;
  p_output1[205]=9;
  p_output1[206]=9;
  p_output1[207]=10;
  p_output1[208]=10;
  p_output1[209]=10;
  p_output1[210]=10;
  p_output1[211]=10;
  p_output1[212]=10;
  p_output1[213]=10;
  p_output1[214]=10;
  p_output1[215]=10;
  p_output1[216]=10;
  p_output1[217]=10;
  p_output1[218]=10;
  p_output1[219]=10;
  p_output1[220]=10;
  p_output1[221]=10;
  p_output1[222]=10;
  p_output1[223]=10;
  p_output1[224]=10;
  p_output1[225]=10;
  p_output1[226]=10;
  p_output1[227]=10;
  p_output1[228]=10;
  p_output1[229]=10;
  p_output1[230]=11;
  p_output1[231]=11;
  p_output1[232]=11;
  p_output1[233]=11;
  p_output1[234]=11;
  p_output1[235]=11;
  p_output1[236]=11;
  p_output1[237]=11;
  p_output1[238]=11;
  p_output1[239]=11;
  p_output1[240]=11;
  p_output1[241]=11;
  p_output1[242]=11;
  p_output1[243]=11;
  p_output1[244]=11;
  p_output1[245]=11;
  p_output1[246]=11;
  p_output1[247]=11;
  p_output1[248]=11;
  p_output1[249]=11;
  p_output1[250]=11;
  p_output1[251]=11;
  p_output1[252]=11;
  p_output1[253]=12;
  p_output1[254]=12;
  p_output1[255]=12;
  p_output1[256]=12;
  p_output1[257]=12;
  p_output1[258]=12;
  p_output1[259]=12;
  p_output1[260]=12;
  p_output1[261]=12;
  p_output1[262]=12;
  p_output1[263]=12;
  p_output1[264]=12;
  p_output1[265]=12;
  p_output1[266]=12;
  p_output1[267]=12;
  p_output1[268]=12;
  p_output1[269]=12;
  p_output1[270]=12;
  p_output1[271]=12;
  p_output1[272]=12;
  p_output1[273]=12;
  p_output1[274]=12;
  p_output1[275]=12;
  p_output1[276]=13;
  p_output1[277]=13;
  p_output1[278]=13;
  p_output1[279]=13;
  p_output1[280]=13;
  p_output1[281]=13;
  p_output1[282]=13;
  p_output1[283]=13;
  p_output1[284]=13;
  p_output1[285]=13;
  p_output1[286]=13;
  p_output1[287]=13;
  p_output1[288]=13;
  p_output1[289]=13;
  p_output1[290]=13;
  p_output1[291]=13;
  p_output1[292]=13;
  p_output1[293]=13;
  p_output1[294]=13;
  p_output1[295]=13;
  p_output1[296]=13;
  p_output1[297]=13;
  p_output1[298]=13;
  p_output1[299]=4;
  p_output1[300]=5;
  p_output1[301]=6;
  p_output1[302]=7;
  p_output1[303]=8;
  p_output1[304]=9;
  p_output1[305]=10;
  p_output1[306]=11;
  p_output1[307]=12;
  p_output1[308]=13;
  p_output1[309]=21;
  p_output1[310]=22;
  p_output1[311]=23;
  p_output1[312]=24;
  p_output1[313]=25;
  p_output1[314]=26;
  p_output1[315]=27;
  p_output1[316]=28;
  p_output1[317]=29;
  p_output1[318]=30;
  p_output1[319]=31;
  p_output1[320]=32;
  p_output1[321]=33;
  p_output1[322]=4;
  p_output1[323]=5;
  p_output1[324]=6;
  p_output1[325]=7;
  p_output1[326]=8;
  p_output1[327]=9;
  p_output1[328]=10;
  p_output1[329]=11;
  p_output1[330]=12;
  p_output1[331]=13;
  p_output1[332]=21;
  p_output1[333]=22;
  p_output1[334]=23;
  p_output1[335]=24;
  p_output1[336]=25;
  p_output1[337]=26;
  p_output1[338]=27;
  p_output1[339]=28;
  p_output1[340]=29;
  p_output1[341]=30;
  p_output1[342]=31;
  p_output1[343]=32;
  p_output1[344]=33;
  p_output1[345]=4;
  p_output1[346]=5;
  p_output1[347]=6;
  p_output1[348]=7;
  p_output1[349]=8;
  p_output1[350]=9;
  p_output1[351]=10;
  p_output1[352]=11;
  p_output1[353]=12;
  p_output1[354]=13;
  p_output1[355]=21;
  p_output1[356]=22;
  p_output1[357]=23;
  p_output1[358]=24;
  p_output1[359]=25;
  p_output1[360]=26;
  p_output1[361]=27;
  p_output1[362]=28;
  p_output1[363]=29;
  p_output1[364]=30;
  p_output1[365]=31;
  p_output1[366]=32;
  p_output1[367]=33;
  p_output1[368]=4;
  p_output1[369]=5;
  p_output1[370]=6;
  p_output1[371]=7;
  p_output1[372]=8;
  p_output1[373]=9;
  p_output1[374]=10;
  p_output1[375]=11;
  p_output1[376]=12;
  p_output1[377]=13;
  p_output1[378]=21;
  p_output1[379]=22;
  p_output1[380]=23;
  p_output1[381]=24;
  p_output1[382]=25;
  p_output1[383]=26;
  p_output1[384]=27;
  p_output1[385]=28;
  p_output1[386]=29;
  p_output1[387]=30;
  p_output1[388]=31;
  p_output1[389]=32;
  p_output1[390]=33;
  p_output1[391]=4;
  p_output1[392]=5;
  p_output1[393]=6;
  p_output1[394]=7;
  p_output1[395]=8;
  p_output1[396]=9;
  p_output1[397]=10;
  p_output1[398]=11;
  p_output1[399]=12;
  p_output1[400]=13;
  p_output1[401]=21;
  p_output1[402]=22;
  p_output1[403]=23;
  p_output1[404]=24;
  p_output1[405]=25;
  p_output1[406]=26;
  p_output1[407]=27;
  p_output1[408]=28;
  p_output1[409]=29;
  p_output1[410]=30;
  p_output1[411]=31;
  p_output1[412]=32;
  p_output1[413]=33;
  p_output1[414]=4;
  p_output1[415]=5;
  p_output1[416]=6;
  p_output1[417]=7;
  p_output1[418]=8;
  p_output1[419]=9;
  p_output1[420]=10;
  p_output1[421]=11;
  p_output1[422]=12;
  p_output1[423]=13;
  p_output1[424]=21;
  p_output1[425]=22;
  p_output1[426]=23;
  p_output1[427]=24;
  p_output1[428]=25;
  p_output1[429]=26;
  p_output1[430]=27;
  p_output1[431]=28;
  p_output1[432]=29;
  p_output1[433]=30;
  p_output1[434]=31;
  p_output1[435]=32;
  p_output1[436]=33;
  p_output1[437]=4;
  p_output1[438]=5;
  p_output1[439]=6;
  p_output1[440]=7;
  p_output1[441]=8;
  p_output1[442]=9;
  p_output1[443]=10;
  p_output1[444]=11;
  p_output1[445]=12;
  p_output1[446]=13;
  p_output1[447]=21;
  p_output1[448]=22;
  p_output1[449]=23;
  p_output1[450]=24;
  p_output1[451]=25;
  p_output1[452]=26;
  p_output1[453]=27;
  p_output1[454]=28;
  p_output1[455]=29;
  p_output1[456]=30;
  p_output1[457]=31;
  p_output1[458]=32;
  p_output1[459]=33;
  p_output1[460]=4;
  p_output1[461]=5;
  p_output1[462]=6;
  p_output1[463]=7;
  p_output1[464]=8;
  p_output1[465]=9;
  p_output1[466]=10;
  p_output1[467]=11;
  p_output1[468]=12;
  p_output1[469]=13;
  p_output1[470]=21;
  p_output1[471]=22;
  p_output1[472]=23;
  p_output1[473]=24;
  p_output1[474]=25;
  p_output1[475]=26;
  p_output1[476]=27;
  p_output1[477]=28;
  p_output1[478]=29;
  p_output1[479]=30;
  p_output1[480]=31;
  p_output1[481]=32;
  p_output1[482]=33;
  p_output1[483]=4;
  p_output1[484]=5;
  p_output1[485]=6;
  p_output1[486]=7;
  p_output1[487]=8;
  p_output1[488]=9;
  p_output1[489]=10;
  p_output1[490]=11;
  p_output1[491]=12;
  p_output1[492]=13;
  p_output1[493]=21;
  p_output1[494]=22;
  p_output1[495]=23;
  p_output1[496]=24;
  p_output1[497]=25;
  p_output1[498]=26;
  p_output1[499]=27;
  p_output1[500]=28;
  p_output1[501]=29;
  p_output1[502]=30;
  p_output1[503]=31;
  p_output1[504]=32;
  p_output1[505]=33;
  p_output1[506]=4;
  p_output1[507]=5;
  p_output1[508]=6;
  p_output1[509]=7;
  p_output1[510]=8;
  p_output1[511]=9;
  p_output1[512]=10;
  p_output1[513]=11;
  p_output1[514]=12;
  p_output1[515]=13;
  p_output1[516]=21;
  p_output1[517]=22;
  p_output1[518]=23;
  p_output1[519]=24;
  p_output1[520]=25;
  p_output1[521]=26;
  p_output1[522]=27;
  p_output1[523]=28;
  p_output1[524]=29;
  p_output1[525]=30;
  p_output1[526]=31;
  p_output1[527]=32;
  p_output1[528]=33;
  p_output1[529]=4;
  p_output1[530]=5;
  p_output1[531]=6;
  p_output1[532]=7;
  p_output1[533]=8;
  p_output1[534]=9;
  p_output1[535]=10;
  p_output1[536]=11;
  p_output1[537]=12;
  p_output1[538]=13;
  p_output1[539]=21;
  p_output1[540]=22;
  p_output1[541]=23;
  p_output1[542]=24;
  p_output1[543]=25;
  p_output1[544]=26;
  p_output1[545]=27;
  p_output1[546]=28;
  p_output1[547]=29;
  p_output1[548]=30;
  p_output1[549]=31;
  p_output1[550]=32;
  p_output1[551]=33;
  p_output1[552]=4;
  p_output1[553]=5;
  p_output1[554]=6;
  p_output1[555]=7;
  p_output1[556]=8;
  p_output1[557]=9;
  p_output1[558]=10;
  p_output1[559]=11;
  p_output1[560]=12;
  p_output1[561]=13;
  p_output1[562]=21;
  p_output1[563]=22;
  p_output1[564]=23;
  p_output1[565]=24;
  p_output1[566]=25;
  p_output1[567]=26;
  p_output1[568]=27;
  p_output1[569]=28;
  p_output1[570]=29;
  p_output1[571]=30;
  p_output1[572]=31;
  p_output1[573]=32;
  p_output1[574]=33;
  p_output1[575]=4;
  p_output1[576]=5;
  p_output1[577]=6;
  p_output1[578]=7;
  p_output1[579]=8;
  p_output1[580]=9;
  p_output1[581]=10;
  p_output1[582]=11;
  p_output1[583]=12;
  p_output1[584]=13;
  p_output1[585]=21;
  p_output1[586]=22;
  p_output1[587]=23;
  p_output1[588]=24;
  p_output1[589]=25;
  p_output1[590]=26;
  p_output1[591]=27;
  p_output1[592]=28;
  p_output1[593]=29;
  p_output1[594]=30;
  p_output1[595]=31;
  p_output1[596]=32;
  p_output1[597]=33;
}



void frost::gen::Js_Ce2_vec13_cassie(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
