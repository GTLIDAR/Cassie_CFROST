/*
 * Automatically Generated from Mathematica.
 * Wed 20 Jun 2018 12:36:56 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "frost/gen/Js_Ce2_vec7_cassie.hh"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double _NotUsed;
  NULL;
  p_output1[0]=1;
  p_output1[1]=1;
  p_output1[2]=1;
  p_output1[3]=1;
  p_output1[4]=1;
  p_output1[5]=1;
  p_output1[6]=1;
  p_output1[7]=1;
  p_output1[8]=1;
  p_output1[9]=1;
  p_output1[10]=1;
  p_output1[11]=1;
  p_output1[12]=1;
  p_output1[13]=1;
  p_output1[14]=1;
  p_output1[15]=1;
  p_output1[16]=1;
  p_output1[17]=1;
  p_output1[18]=1;
  p_output1[19]=1;
  p_output1[20]=1;
  p_output1[21]=1;
  p_output1[22]=1;
  p_output1[23]=2;
  p_output1[24]=2;
  p_output1[25]=2;
  p_output1[26]=2;
  p_output1[27]=2;
  p_output1[28]=2;
  p_output1[29]=2;
  p_output1[30]=2;
  p_output1[31]=2;
  p_output1[32]=2;
  p_output1[33]=2;
  p_output1[34]=2;
  p_output1[35]=2;
  p_output1[36]=2;
  p_output1[37]=2;
  p_output1[38]=2;
  p_output1[39]=2;
  p_output1[40]=2;
  p_output1[41]=2;
  p_output1[42]=2;
  p_output1[43]=2;
  p_output1[44]=2;
  p_output1[45]=2;
  p_output1[46]=3;
  p_output1[47]=3;
  p_output1[48]=3;
  p_output1[49]=3;
  p_output1[50]=3;
  p_output1[51]=3;
  p_output1[52]=3;
  p_output1[53]=3;
  p_output1[54]=3;
  p_output1[55]=3;
  p_output1[56]=3;
  p_output1[57]=3;
  p_output1[58]=3;
  p_output1[59]=3;
  p_output1[60]=3;
  p_output1[61]=3;
  p_output1[62]=3;
  p_output1[63]=3;
  p_output1[64]=3;
  p_output1[65]=3;
  p_output1[66]=3;
  p_output1[67]=3;
  p_output1[68]=3;
  p_output1[69]=4;
  p_output1[70]=4;
  p_output1[71]=4;
  p_output1[72]=4;
  p_output1[73]=4;
  p_output1[74]=4;
  p_output1[75]=4;
  p_output1[76]=4;
  p_output1[77]=4;
  p_output1[78]=4;
  p_output1[79]=4;
  p_output1[80]=4;
  p_output1[81]=4;
  p_output1[82]=4;
  p_output1[83]=4;
  p_output1[84]=4;
  p_output1[85]=4;
  p_output1[86]=4;
  p_output1[87]=4;
  p_output1[88]=4;
  p_output1[89]=4;
  p_output1[90]=4;
  p_output1[91]=4;
  p_output1[92]=5;
  p_output1[93]=5;
  p_output1[94]=5;
  p_output1[95]=5;
  p_output1[96]=5;
  p_output1[97]=5;
  p_output1[98]=5;
  p_output1[99]=5;
  p_output1[100]=5;
  p_output1[101]=5;
  p_output1[102]=5;
  p_output1[103]=5;
  p_output1[104]=5;
  p_output1[105]=5;
  p_output1[106]=5;
  p_output1[107]=5;
  p_output1[108]=5;
  p_output1[109]=5;
  p_output1[110]=5;
  p_output1[111]=5;
  p_output1[112]=5;
  p_output1[113]=5;
  p_output1[114]=5;
  p_output1[115]=6;
  p_output1[116]=6;
  p_output1[117]=6;
  p_output1[118]=6;
  p_output1[119]=6;
  p_output1[120]=6;
  p_output1[121]=6;
  p_output1[122]=6;
  p_output1[123]=6;
  p_output1[124]=6;
  p_output1[125]=6;
  p_output1[126]=6;
  p_output1[127]=6;
  p_output1[128]=6;
  p_output1[129]=6;
  p_output1[130]=6;
  p_output1[131]=6;
  p_output1[132]=6;
  p_output1[133]=6;
  p_output1[134]=6;
  p_output1[135]=6;
  p_output1[136]=6;
  p_output1[137]=6;
  p_output1[138]=7;
  p_output1[139]=7;
  p_output1[140]=7;
  p_output1[141]=7;
  p_output1[142]=7;
  p_output1[143]=7;
  p_output1[144]=7;
  p_output1[145]=7;
  p_output1[146]=7;
  p_output1[147]=7;
  p_output1[148]=7;
  p_output1[149]=7;
  p_output1[150]=7;
  p_output1[151]=7;
  p_output1[152]=7;
  p_output1[153]=7;
  p_output1[154]=7;
  p_output1[155]=8;
  p_output1[156]=8;
  p_output1[157]=8;
  p_output1[158]=8;
  p_output1[159]=8;
  p_output1[160]=8;
  p_output1[161]=8;
  p_output1[162]=8;
  p_output1[163]=8;
  p_output1[164]=8;
  p_output1[165]=8;
  p_output1[166]=8;
  p_output1[167]=8;
  p_output1[168]=8;
  p_output1[169]=8;
  p_output1[170]=8;
  p_output1[171]=8;
  p_output1[172]=9;
  p_output1[173]=9;
  p_output1[174]=9;
  p_output1[175]=9;
  p_output1[176]=9;
  p_output1[177]=9;
  p_output1[178]=9;
  p_output1[179]=9;
  p_output1[180]=9;
  p_output1[181]=9;
  p_output1[182]=9;
  p_output1[183]=9;
  p_output1[184]=9;
  p_output1[185]=9;
  p_output1[186]=9;
  p_output1[187]=9;
  p_output1[188]=9;
  p_output1[189]=10;
  p_output1[190]=10;
  p_output1[191]=10;
  p_output1[192]=10;
  p_output1[193]=10;
  p_output1[194]=10;
  p_output1[195]=10;
  p_output1[196]=10;
  p_output1[197]=10;
  p_output1[198]=10;
  p_output1[199]=10;
  p_output1[200]=10;
  p_output1[201]=10;
  p_output1[202]=10;
  p_output1[203]=10;
  p_output1[204]=10;
  p_output1[205]=10;
  p_output1[206]=11;
  p_output1[207]=11;
  p_output1[208]=11;
  p_output1[209]=11;
  p_output1[210]=11;
  p_output1[211]=11;
  p_output1[212]=11;
  p_output1[213]=11;
  p_output1[214]=11;
  p_output1[215]=11;
  p_output1[216]=11;
  p_output1[217]=11;
  p_output1[218]=11;
  p_output1[219]=11;
  p_output1[220]=11;
  p_output1[221]=11;
  p_output1[222]=11;
  p_output1[223]=12;
  p_output1[224]=12;
  p_output1[225]=12;
  p_output1[226]=12;
  p_output1[227]=12;
  p_output1[228]=12;
  p_output1[229]=12;
  p_output1[230]=12;
  p_output1[231]=12;
  p_output1[232]=12;
  p_output1[233]=12;
  p_output1[234]=12;
  p_output1[235]=12;
  p_output1[236]=12;
  p_output1[237]=12;
  p_output1[238]=12;
  p_output1[239]=12;
  p_output1[240]=13;
  p_output1[241]=13;
  p_output1[242]=13;
  p_output1[243]=13;
  p_output1[244]=13;
  p_output1[245]=13;
  p_output1[246]=13;
  p_output1[247]=13;
  p_output1[248]=13;
  p_output1[249]=13;
  p_output1[250]=13;
  p_output1[251]=13;
  p_output1[252]=13;
  p_output1[253]=13;
  p_output1[254]=13;
  p_output1[255]=13;
  p_output1[256]=13;
  p_output1[257]=4;
  p_output1[258]=5;
  p_output1[259]=6;
  p_output1[260]=7;
  p_output1[261]=8;
  p_output1[262]=9;
  p_output1[263]=10;
  p_output1[264]=11;
  p_output1[265]=12;
  p_output1[266]=13;
  p_output1[267]=21;
  p_output1[268]=22;
  p_output1[269]=23;
  p_output1[270]=24;
  p_output1[271]=25;
  p_output1[272]=26;
  p_output1[273]=27;
  p_output1[274]=28;
  p_output1[275]=29;
  p_output1[276]=30;
  p_output1[277]=31;
  p_output1[278]=32;
  p_output1[279]=33;
  p_output1[280]=4;
  p_output1[281]=5;
  p_output1[282]=6;
  p_output1[283]=7;
  p_output1[284]=8;
  p_output1[285]=9;
  p_output1[286]=10;
  p_output1[287]=11;
  p_output1[288]=12;
  p_output1[289]=13;
  p_output1[290]=21;
  p_output1[291]=22;
  p_output1[292]=23;
  p_output1[293]=24;
  p_output1[294]=25;
  p_output1[295]=26;
  p_output1[296]=27;
  p_output1[297]=28;
  p_output1[298]=29;
  p_output1[299]=30;
  p_output1[300]=31;
  p_output1[301]=32;
  p_output1[302]=33;
  p_output1[303]=4;
  p_output1[304]=5;
  p_output1[305]=6;
  p_output1[306]=7;
  p_output1[307]=8;
  p_output1[308]=9;
  p_output1[309]=10;
  p_output1[310]=11;
  p_output1[311]=12;
  p_output1[312]=13;
  p_output1[313]=21;
  p_output1[314]=22;
  p_output1[315]=23;
  p_output1[316]=24;
  p_output1[317]=25;
  p_output1[318]=26;
  p_output1[319]=27;
  p_output1[320]=28;
  p_output1[321]=29;
  p_output1[322]=30;
  p_output1[323]=31;
  p_output1[324]=32;
  p_output1[325]=33;
  p_output1[326]=4;
  p_output1[327]=5;
  p_output1[328]=6;
  p_output1[329]=7;
  p_output1[330]=8;
  p_output1[331]=9;
  p_output1[332]=10;
  p_output1[333]=11;
  p_output1[334]=12;
  p_output1[335]=13;
  p_output1[336]=21;
  p_output1[337]=22;
  p_output1[338]=23;
  p_output1[339]=24;
  p_output1[340]=25;
  p_output1[341]=26;
  p_output1[342]=27;
  p_output1[343]=28;
  p_output1[344]=29;
  p_output1[345]=30;
  p_output1[346]=31;
  p_output1[347]=32;
  p_output1[348]=33;
  p_output1[349]=4;
  p_output1[350]=5;
  p_output1[351]=6;
  p_output1[352]=7;
  p_output1[353]=8;
  p_output1[354]=9;
  p_output1[355]=10;
  p_output1[356]=11;
  p_output1[357]=12;
  p_output1[358]=13;
  p_output1[359]=21;
  p_output1[360]=22;
  p_output1[361]=23;
  p_output1[362]=24;
  p_output1[363]=25;
  p_output1[364]=26;
  p_output1[365]=27;
  p_output1[366]=28;
  p_output1[367]=29;
  p_output1[368]=30;
  p_output1[369]=31;
  p_output1[370]=32;
  p_output1[371]=33;
  p_output1[372]=4;
  p_output1[373]=5;
  p_output1[374]=6;
  p_output1[375]=7;
  p_output1[376]=8;
  p_output1[377]=9;
  p_output1[378]=10;
  p_output1[379]=11;
  p_output1[380]=12;
  p_output1[381]=13;
  p_output1[382]=21;
  p_output1[383]=22;
  p_output1[384]=23;
  p_output1[385]=24;
  p_output1[386]=25;
  p_output1[387]=26;
  p_output1[388]=27;
  p_output1[389]=28;
  p_output1[390]=29;
  p_output1[391]=30;
  p_output1[392]=31;
  p_output1[393]=32;
  p_output1[394]=33;
  p_output1[395]=4;
  p_output1[396]=5;
  p_output1[397]=6;
  p_output1[398]=7;
  p_output1[399]=8;
  p_output1[400]=9;
  p_output1[401]=10;
  p_output1[402]=11;
  p_output1[403]=12;
  p_output1[404]=13;
  p_output1[405]=21;
  p_output1[406]=22;
  p_output1[407]=23;
  p_output1[408]=24;
  p_output1[409]=25;
  p_output1[410]=26;
  p_output1[411]=27;
  p_output1[412]=4;
  p_output1[413]=5;
  p_output1[414]=6;
  p_output1[415]=7;
  p_output1[416]=8;
  p_output1[417]=9;
  p_output1[418]=10;
  p_output1[419]=11;
  p_output1[420]=12;
  p_output1[421]=13;
  p_output1[422]=21;
  p_output1[423]=22;
  p_output1[424]=23;
  p_output1[425]=24;
  p_output1[426]=25;
  p_output1[427]=26;
  p_output1[428]=27;
  p_output1[429]=4;
  p_output1[430]=5;
  p_output1[431]=6;
  p_output1[432]=7;
  p_output1[433]=8;
  p_output1[434]=9;
  p_output1[435]=10;
  p_output1[436]=11;
  p_output1[437]=12;
  p_output1[438]=13;
  p_output1[439]=21;
  p_output1[440]=22;
  p_output1[441]=23;
  p_output1[442]=24;
  p_output1[443]=25;
  p_output1[444]=26;
  p_output1[445]=27;
  p_output1[446]=4;
  p_output1[447]=5;
  p_output1[448]=6;
  p_output1[449]=7;
  p_output1[450]=8;
  p_output1[451]=9;
  p_output1[452]=10;
  p_output1[453]=11;
  p_output1[454]=12;
  p_output1[455]=13;
  p_output1[456]=21;
  p_output1[457]=22;
  p_output1[458]=23;
  p_output1[459]=24;
  p_output1[460]=25;
  p_output1[461]=26;
  p_output1[462]=27;
  p_output1[463]=4;
  p_output1[464]=5;
  p_output1[465]=6;
  p_output1[466]=7;
  p_output1[467]=8;
  p_output1[468]=9;
  p_output1[469]=10;
  p_output1[470]=11;
  p_output1[471]=12;
  p_output1[472]=13;
  p_output1[473]=21;
  p_output1[474]=22;
  p_output1[475]=23;
  p_output1[476]=24;
  p_output1[477]=25;
  p_output1[478]=26;
  p_output1[479]=27;
  p_output1[480]=4;
  p_output1[481]=5;
  p_output1[482]=6;
  p_output1[483]=7;
  p_output1[484]=8;
  p_output1[485]=9;
  p_output1[486]=10;
  p_output1[487]=11;
  p_output1[488]=12;
  p_output1[489]=13;
  p_output1[490]=21;
  p_output1[491]=22;
  p_output1[492]=23;
  p_output1[493]=24;
  p_output1[494]=25;
  p_output1[495]=26;
  p_output1[496]=27;
  p_output1[497]=4;
  p_output1[498]=5;
  p_output1[499]=6;
  p_output1[500]=7;
  p_output1[501]=8;
  p_output1[502]=9;
  p_output1[503]=10;
  p_output1[504]=11;
  p_output1[505]=12;
  p_output1[506]=13;
  p_output1[507]=21;
  p_output1[508]=22;
  p_output1[509]=23;
  p_output1[510]=24;
  p_output1[511]=25;
  p_output1[512]=26;
  p_output1[513]=27;
}



void frost::gen::Js_Ce2_vec7_cassie(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
