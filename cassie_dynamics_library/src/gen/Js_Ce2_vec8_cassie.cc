/*
 * Automatically Generated from Mathematica.
 * Wed 20 Jun 2018 12:38:14 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "frost/gen/Js_Ce2_vec8_cassie.hh"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }
//INLINE double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double _NotUsed;
  NULL;
  p_output1[0]=1;
  p_output1[1]=1;
  p_output1[2]=1;
  p_output1[3]=1;
  p_output1[4]=1;
  p_output1[5]=1;
  p_output1[6]=1;
  p_output1[7]=1;
  p_output1[8]=1;
  p_output1[9]=1;
  p_output1[10]=1;
  p_output1[11]=1;
  p_output1[12]=1;
  p_output1[13]=1;
  p_output1[14]=1;
  p_output1[15]=1;
  p_output1[16]=1;
  p_output1[17]=1;
  p_output1[18]=1;
  p_output1[19]=1;
  p_output1[20]=1;
  p_output1[21]=1;
  p_output1[22]=1;
  p_output1[23]=2;
  p_output1[24]=2;
  p_output1[25]=2;
  p_output1[26]=2;
  p_output1[27]=2;
  p_output1[28]=2;
  p_output1[29]=2;
  p_output1[30]=2;
  p_output1[31]=2;
  p_output1[32]=2;
  p_output1[33]=2;
  p_output1[34]=2;
  p_output1[35]=2;
  p_output1[36]=2;
  p_output1[37]=2;
  p_output1[38]=2;
  p_output1[39]=2;
  p_output1[40]=2;
  p_output1[41]=2;
  p_output1[42]=2;
  p_output1[43]=2;
  p_output1[44]=2;
  p_output1[45]=2;
  p_output1[46]=3;
  p_output1[47]=3;
  p_output1[48]=3;
  p_output1[49]=3;
  p_output1[50]=3;
  p_output1[51]=3;
  p_output1[52]=3;
  p_output1[53]=3;
  p_output1[54]=3;
  p_output1[55]=3;
  p_output1[56]=3;
  p_output1[57]=3;
  p_output1[58]=3;
  p_output1[59]=3;
  p_output1[60]=3;
  p_output1[61]=3;
  p_output1[62]=3;
  p_output1[63]=3;
  p_output1[64]=3;
  p_output1[65]=3;
  p_output1[66]=3;
  p_output1[67]=3;
  p_output1[68]=3;
  p_output1[69]=4;
  p_output1[70]=4;
  p_output1[71]=4;
  p_output1[72]=4;
  p_output1[73]=4;
  p_output1[74]=4;
  p_output1[75]=4;
  p_output1[76]=4;
  p_output1[77]=4;
  p_output1[78]=4;
  p_output1[79]=4;
  p_output1[80]=4;
  p_output1[81]=4;
  p_output1[82]=4;
  p_output1[83]=4;
  p_output1[84]=4;
  p_output1[85]=4;
  p_output1[86]=4;
  p_output1[87]=4;
  p_output1[88]=4;
  p_output1[89]=4;
  p_output1[90]=4;
  p_output1[91]=4;
  p_output1[92]=5;
  p_output1[93]=5;
  p_output1[94]=5;
  p_output1[95]=5;
  p_output1[96]=5;
  p_output1[97]=5;
  p_output1[98]=5;
  p_output1[99]=5;
  p_output1[100]=5;
  p_output1[101]=5;
  p_output1[102]=5;
  p_output1[103]=5;
  p_output1[104]=5;
  p_output1[105]=5;
  p_output1[106]=5;
  p_output1[107]=5;
  p_output1[108]=5;
  p_output1[109]=5;
  p_output1[110]=5;
  p_output1[111]=5;
  p_output1[112]=5;
  p_output1[113]=5;
  p_output1[114]=5;
  p_output1[115]=6;
  p_output1[116]=6;
  p_output1[117]=6;
  p_output1[118]=6;
  p_output1[119]=6;
  p_output1[120]=6;
  p_output1[121]=6;
  p_output1[122]=6;
  p_output1[123]=6;
  p_output1[124]=6;
  p_output1[125]=6;
  p_output1[126]=6;
  p_output1[127]=6;
  p_output1[128]=6;
  p_output1[129]=6;
  p_output1[130]=6;
  p_output1[131]=6;
  p_output1[132]=6;
  p_output1[133]=6;
  p_output1[134]=6;
  p_output1[135]=6;
  p_output1[136]=6;
  p_output1[137]=6;
  p_output1[138]=7;
  p_output1[139]=7;
  p_output1[140]=7;
  p_output1[141]=7;
  p_output1[142]=7;
  p_output1[143]=7;
  p_output1[144]=7;
  p_output1[145]=7;
  p_output1[146]=7;
  p_output1[147]=7;
  p_output1[148]=7;
  p_output1[149]=7;
  p_output1[150]=7;
  p_output1[151]=7;
  p_output1[152]=7;
  p_output1[153]=7;
  p_output1[154]=7;
  p_output1[155]=7;
  p_output1[156]=7;
  p_output1[157]=7;
  p_output1[158]=7;
  p_output1[159]=7;
  p_output1[160]=7;
  p_output1[161]=8;
  p_output1[162]=8;
  p_output1[163]=8;
  p_output1[164]=8;
  p_output1[165]=8;
  p_output1[166]=8;
  p_output1[167]=8;
  p_output1[168]=8;
  p_output1[169]=8;
  p_output1[170]=8;
  p_output1[171]=8;
  p_output1[172]=8;
  p_output1[173]=8;
  p_output1[174]=8;
  p_output1[175]=8;
  p_output1[176]=8;
  p_output1[177]=8;
  p_output1[178]=8;
  p_output1[179]=9;
  p_output1[180]=9;
  p_output1[181]=9;
  p_output1[182]=9;
  p_output1[183]=9;
  p_output1[184]=9;
  p_output1[185]=9;
  p_output1[186]=9;
  p_output1[187]=9;
  p_output1[188]=9;
  p_output1[189]=9;
  p_output1[190]=9;
  p_output1[191]=9;
  p_output1[192]=9;
  p_output1[193]=9;
  p_output1[194]=9;
  p_output1[195]=9;
  p_output1[196]=9;
  p_output1[197]=10;
  p_output1[198]=10;
  p_output1[199]=10;
  p_output1[200]=10;
  p_output1[201]=10;
  p_output1[202]=10;
  p_output1[203]=10;
  p_output1[204]=10;
  p_output1[205]=10;
  p_output1[206]=10;
  p_output1[207]=10;
  p_output1[208]=10;
  p_output1[209]=10;
  p_output1[210]=10;
  p_output1[211]=10;
  p_output1[212]=10;
  p_output1[213]=10;
  p_output1[214]=10;
  p_output1[215]=11;
  p_output1[216]=11;
  p_output1[217]=11;
  p_output1[218]=11;
  p_output1[219]=11;
  p_output1[220]=11;
  p_output1[221]=11;
  p_output1[222]=11;
  p_output1[223]=11;
  p_output1[224]=11;
  p_output1[225]=11;
  p_output1[226]=11;
  p_output1[227]=11;
  p_output1[228]=11;
  p_output1[229]=11;
  p_output1[230]=11;
  p_output1[231]=11;
  p_output1[232]=11;
  p_output1[233]=12;
  p_output1[234]=12;
  p_output1[235]=12;
  p_output1[236]=12;
  p_output1[237]=12;
  p_output1[238]=12;
  p_output1[239]=12;
  p_output1[240]=12;
  p_output1[241]=12;
  p_output1[242]=12;
  p_output1[243]=12;
  p_output1[244]=12;
  p_output1[245]=12;
  p_output1[246]=12;
  p_output1[247]=12;
  p_output1[248]=12;
  p_output1[249]=12;
  p_output1[250]=12;
  p_output1[251]=13;
  p_output1[252]=13;
  p_output1[253]=13;
  p_output1[254]=13;
  p_output1[255]=13;
  p_output1[256]=13;
  p_output1[257]=13;
  p_output1[258]=13;
  p_output1[259]=13;
  p_output1[260]=13;
  p_output1[261]=13;
  p_output1[262]=13;
  p_output1[263]=13;
  p_output1[264]=13;
  p_output1[265]=13;
  p_output1[266]=13;
  p_output1[267]=13;
  p_output1[268]=13;
  p_output1[269]=4;
  p_output1[270]=5;
  p_output1[271]=6;
  p_output1[272]=7;
  p_output1[273]=8;
  p_output1[274]=9;
  p_output1[275]=10;
  p_output1[276]=11;
  p_output1[277]=12;
  p_output1[278]=13;
  p_output1[279]=21;
  p_output1[280]=22;
  p_output1[281]=23;
  p_output1[282]=24;
  p_output1[283]=25;
  p_output1[284]=26;
  p_output1[285]=27;
  p_output1[286]=28;
  p_output1[287]=29;
  p_output1[288]=30;
  p_output1[289]=31;
  p_output1[290]=32;
  p_output1[291]=33;
  p_output1[292]=4;
  p_output1[293]=5;
  p_output1[294]=6;
  p_output1[295]=7;
  p_output1[296]=8;
  p_output1[297]=9;
  p_output1[298]=10;
  p_output1[299]=11;
  p_output1[300]=12;
  p_output1[301]=13;
  p_output1[302]=21;
  p_output1[303]=22;
  p_output1[304]=23;
  p_output1[305]=24;
  p_output1[306]=25;
  p_output1[307]=26;
  p_output1[308]=27;
  p_output1[309]=28;
  p_output1[310]=29;
  p_output1[311]=30;
  p_output1[312]=31;
  p_output1[313]=32;
  p_output1[314]=33;
  p_output1[315]=4;
  p_output1[316]=5;
  p_output1[317]=6;
  p_output1[318]=7;
  p_output1[319]=8;
  p_output1[320]=9;
  p_output1[321]=10;
  p_output1[322]=11;
  p_output1[323]=12;
  p_output1[324]=13;
  p_output1[325]=21;
  p_output1[326]=22;
  p_output1[327]=23;
  p_output1[328]=24;
  p_output1[329]=25;
  p_output1[330]=26;
  p_output1[331]=27;
  p_output1[332]=28;
  p_output1[333]=29;
  p_output1[334]=30;
  p_output1[335]=31;
  p_output1[336]=32;
  p_output1[337]=33;
  p_output1[338]=4;
  p_output1[339]=5;
  p_output1[340]=6;
  p_output1[341]=7;
  p_output1[342]=8;
  p_output1[343]=9;
  p_output1[344]=10;
  p_output1[345]=11;
  p_output1[346]=12;
  p_output1[347]=13;
  p_output1[348]=21;
  p_output1[349]=22;
  p_output1[350]=23;
  p_output1[351]=24;
  p_output1[352]=25;
  p_output1[353]=26;
  p_output1[354]=27;
  p_output1[355]=28;
  p_output1[356]=29;
  p_output1[357]=30;
  p_output1[358]=31;
  p_output1[359]=32;
  p_output1[360]=33;
  p_output1[361]=4;
  p_output1[362]=5;
  p_output1[363]=6;
  p_output1[364]=7;
  p_output1[365]=8;
  p_output1[366]=9;
  p_output1[367]=10;
  p_output1[368]=11;
  p_output1[369]=12;
  p_output1[370]=13;
  p_output1[371]=21;
  p_output1[372]=22;
  p_output1[373]=23;
  p_output1[374]=24;
  p_output1[375]=25;
  p_output1[376]=26;
  p_output1[377]=27;
  p_output1[378]=28;
  p_output1[379]=29;
  p_output1[380]=30;
  p_output1[381]=31;
  p_output1[382]=32;
  p_output1[383]=33;
  p_output1[384]=4;
  p_output1[385]=5;
  p_output1[386]=6;
  p_output1[387]=7;
  p_output1[388]=8;
  p_output1[389]=9;
  p_output1[390]=10;
  p_output1[391]=11;
  p_output1[392]=12;
  p_output1[393]=13;
  p_output1[394]=21;
  p_output1[395]=22;
  p_output1[396]=23;
  p_output1[397]=24;
  p_output1[398]=25;
  p_output1[399]=26;
  p_output1[400]=27;
  p_output1[401]=28;
  p_output1[402]=29;
  p_output1[403]=30;
  p_output1[404]=31;
  p_output1[405]=32;
  p_output1[406]=33;
  p_output1[407]=4;
  p_output1[408]=5;
  p_output1[409]=6;
  p_output1[410]=7;
  p_output1[411]=8;
  p_output1[412]=9;
  p_output1[413]=10;
  p_output1[414]=11;
  p_output1[415]=12;
  p_output1[416]=13;
  p_output1[417]=21;
  p_output1[418]=22;
  p_output1[419]=23;
  p_output1[420]=24;
  p_output1[421]=25;
  p_output1[422]=26;
  p_output1[423]=27;
  p_output1[424]=28;
  p_output1[425]=29;
  p_output1[426]=30;
  p_output1[427]=31;
  p_output1[428]=32;
  p_output1[429]=33;
  p_output1[430]=4;
  p_output1[431]=5;
  p_output1[432]=6;
  p_output1[433]=7;
  p_output1[434]=8;
  p_output1[435]=9;
  p_output1[436]=10;
  p_output1[437]=11;
  p_output1[438]=12;
  p_output1[439]=13;
  p_output1[440]=21;
  p_output1[441]=22;
  p_output1[442]=23;
  p_output1[443]=24;
  p_output1[444]=25;
  p_output1[445]=26;
  p_output1[446]=27;
  p_output1[447]=28;
  p_output1[448]=4;
  p_output1[449]=5;
  p_output1[450]=6;
  p_output1[451]=7;
  p_output1[452]=8;
  p_output1[453]=9;
  p_output1[454]=10;
  p_output1[455]=11;
  p_output1[456]=12;
  p_output1[457]=13;
  p_output1[458]=21;
  p_output1[459]=22;
  p_output1[460]=23;
  p_output1[461]=24;
  p_output1[462]=25;
  p_output1[463]=26;
  p_output1[464]=27;
  p_output1[465]=28;
  p_output1[466]=4;
  p_output1[467]=5;
  p_output1[468]=6;
  p_output1[469]=7;
  p_output1[470]=8;
  p_output1[471]=9;
  p_output1[472]=10;
  p_output1[473]=11;
  p_output1[474]=12;
  p_output1[475]=13;
  p_output1[476]=21;
  p_output1[477]=22;
  p_output1[478]=23;
  p_output1[479]=24;
  p_output1[480]=25;
  p_output1[481]=26;
  p_output1[482]=27;
  p_output1[483]=28;
  p_output1[484]=4;
  p_output1[485]=5;
  p_output1[486]=6;
  p_output1[487]=7;
  p_output1[488]=8;
  p_output1[489]=9;
  p_output1[490]=10;
  p_output1[491]=11;
  p_output1[492]=12;
  p_output1[493]=13;
  p_output1[494]=21;
  p_output1[495]=22;
  p_output1[496]=23;
  p_output1[497]=24;
  p_output1[498]=25;
  p_output1[499]=26;
  p_output1[500]=27;
  p_output1[501]=28;
  p_output1[502]=4;
  p_output1[503]=5;
  p_output1[504]=6;
  p_output1[505]=7;
  p_output1[506]=8;
  p_output1[507]=9;
  p_output1[508]=10;
  p_output1[509]=11;
  p_output1[510]=12;
  p_output1[511]=13;
  p_output1[512]=21;
  p_output1[513]=22;
  p_output1[514]=23;
  p_output1[515]=24;
  p_output1[516]=25;
  p_output1[517]=26;
  p_output1[518]=27;
  p_output1[519]=28;
  p_output1[520]=4;
  p_output1[521]=5;
  p_output1[522]=6;
  p_output1[523]=7;
  p_output1[524]=8;
  p_output1[525]=9;
  p_output1[526]=10;
  p_output1[527]=11;
  p_output1[528]=12;
  p_output1[529]=13;
  p_output1[530]=21;
  p_output1[531]=22;
  p_output1[532]=23;
  p_output1[533]=24;
  p_output1[534]=25;
  p_output1[535]=26;
  p_output1[536]=27;
  p_output1[537]=28;
}



void frost::gen::Js_Ce2_vec8_cassie(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}
